import com.veriplace.client.Client;
import com.veriplace.client.Location;
import com.veriplace.client.User;
import com.veriplace.client.store.TokenStore;
import com.veriplace.client.store.MemoryTokenStore;
import com.veriplace.oauth.OAuthException;
import com.veriplace.oauth.consumer.Token;
import com.veriplace.oauth.message.Revision;

import java.net.URL;
import java.net.HttpURLConnection;

/* Example of non-UI polling for Veriplace location.
 */

// The phone number of the Veriplace user to locate
String phoneNumber = "0328118684";
///String phoneNumber = "5103181784";

// This callback is required by the OAuth standard, but is unused
String callback = "http://veriplace.com";

// We require the special "Application Token" to issue User Discovery *queries*
// For your application, you can find this value in the Developer Portal
Token applicationToken = new Token("DHgu0Ky1zUS8llHxMXt0",
                                   "nJs2pAxco6wmsOASgmOV");

// We'll need to use our own token store below.
TokenStore tokenStore = new MemoryTokenStore();

// Create the Veriplace client
Client client = new Client("RfhjzYkyYxOL6lrWgrOe",
                           "pHVlIQP1ofd3kpDbe9BV",
                           Revision.Core1_0RevA,
                           applicationToken,
                           "http://veriplace.com",
                           tokenStore);

// Issue the User Discovery query by phone number
User user = client.getUserDiscoveryAPI().getUserByMobileNumber(phoneNumber);

if (user == null) {
   // If the user was not found, it may be because your application is not
   // allowed to locate this user. Try using a simulated, demo, or developer
   // user.
   System.err.println("No user found for:" + phoneNumber);
   System.exit(1);
}

// We found the user	
System.out.println("user id: " + user.getId());

// Veriplace's implementation of OAuth User Authorization supports an "immediate" flag
// If true, Veriplace will grant an Access Token is permission is already granted
// and will bypass all UI, performing the callback immediately
boolean immediate = true;
URL authorizationUrl = new URL(client.getGetLocationAPI().getRedirectURL(callback,user,immediate));

// GET this URL, but do not follow redirects
HttpURLConnection connection = (HttpURLConnection)authorizationUrl.openConnection();
connection.setInstanceFollowRedirects(false);
int code = connection.getResponseCode();
System.out.println("response code: " + code);

if (code == 302) {
   // The User Authorization URL sent a redirect, extract the callback URL
   String location = connection.getHeaderField("Location");
   System.out.println("location:" + location);

   // The callback URL contains the oauth_token and oauth_verifier values (as of Rev A)
   String oauth_token = location.split("oauth_token=")[1].split("&")[0];
   String oauth_verifier = location.split("oauth_verifier=")[1].split("&")[0];
   System.out.println("callback oauth_token: " + oauth_token);
   System.out.println("callback oauth_verifier: " + oauth_verifier);

   // Retrieve the request token from storage
   Token requestToken = tokenStore.get(oauth_token);
   System.out.println("requestToken: " + requestToken.getToken());

   try {
      // Attempt to get an access token
      Token accessToken = client.getConsumer().getAccessToken(requestToken,oauth_verifier);
      System.out.println("accessToken: " + accessToken.getToken());

      // We got an access token, now make a location request
      // If our application was provisioned for it, we can try cached location by setting the mode
      String mode = null;//"cached";
      Location location = client.getGetLocationAPI().getLocation(accessToken,user,mode);

      if (location == null) {
         // If we didn't get back a location object, it means we encountered a rare
         // race condition where the access token was revoked between when we retrieved it
         // and when the location request was issued
         System.out.println("Could not obtain location");
         System.exit(1);
      }

      // We got location, but was it successful?
      if (location.getLongitude() != null &&
          location.getLatitude() != null) {
         // Yes!
         System.out.println(location.getLatitude() + " " + location.getLongitude());
         System.out.println("@tweet_my_city: My Verizon Samsung Omnia is now in " + location.getCity() + ", " + location.getState());
         System.exit(0);
      } else {
         // Sadly, no...
         System.out.println(location.getMessage());
         System.exit(0);
      }
   } catch (OAuthException e) {
      // An exception here means an Access Token wasn't available
      // Try granting permission directly for your application in the Privacy Manager
      // There should now be a permission request visible in the sidebar
      System.err.println(e);
      System.exit(1);
   } finally {
      tokenStore.remove(requestToken);
   }
} else {
   System.out.println("Unexpected http response code: " + code);
   System.exit(1);
}

/*
** Local Variables:
**   c-basic-offset: 3
**   tab-width: 3
**   indent-tabs-mode: nil
** End:
**
** ex: set softtabstop=3 tabstop=3 expandtab cindent shiftwidth=3
*/
